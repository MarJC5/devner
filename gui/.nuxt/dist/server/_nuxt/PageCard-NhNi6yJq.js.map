{"version":3,"file":"PageCard-NhNi6yJq.js","sources":["../../../../node_modules/@nuxt/ui-pro/lib/slots.ts","../../../../node_modules/@nuxt/ui-pro/components/page/PageCard.vue"],"sourcesContent":["// @ts-ignore\nexport const getSlotChildrenText = children => children.map(node => {\n  if (!node.children || typeof node.children === 'string') return node.children || ''\n  else if (Array.isArray(node.children)) return getSlotChildrenText(node.children)\n  else if (node.children.default) return getSlotChildrenText(node.children.default())\n}).join('')\n","<template>\n  <UCard :class=\"[ui.wrapper, to && ui.to]\" v-bind=\"attrs\" :ui=\"ui\">\n    <NuxtLink v-if=\"to\" :aria-label=\"ariaLabel\" v-bind=\"nuxtLinkBind\" class=\"focus:outline-none\" tabindex=\"-1\">\n      <span class=\"absolute inset-0\" aria-hidden=\"true\" />\n    </NuxtLink>\n\n    <template v-if=\"$slots.header\" #header>\n      <slot name=\"header\" />\n    </template>\n\n    <div v-if=\"icon || $slots.icon\" :class=\"ui.icon.wrapper\">\n      <slot name=\"icon\">\n        <UIcon :name=\"(icon as string)\" :class=\"ui.icon.base\" />\n      </slot>\n    </div>\n\n    <p v-if=\"title || $slots.title\" :class=\"ui.title\">\n      <slot name=\"title\">\n        {{ title }}\n      </slot>\n    </p>\n\n    <div v-if=\"description || $slots.description\" :class=\"ui.description\">\n      <slot name=\"description\">\n        {{ description }}\n      </slot>\n    </div>\n\n    <slot />\n\n    <template v-if=\"$slots.footer\" #footer>\n      <slot name=\"footer\" />\n    </template>\n  </UCard>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport { nuxtLinkProps, getNuxtLinkProps } from '#ui/utils'\nimport { getSlotChildrenText } from '../../lib/slots'\nimport { card as cardConfig } from '#ui/ui.config'\n\nconst config = {\n  wrapper: 'relative group',\n  to: 'hover:ring-2 hover:ring-primary-500 dark:hover:ring-primary-400 hover:bg-gray-100/50 dark:hover:bg-gray-800/50',\n  icon: {\n    wrapper: 'mb-6 flex',\n    base: 'w-10 h-10 flex-shrink-0 text-primary'\n  },\n  body: {\n    base: 'flex-1'\n  },\n  title: 'text-gray-900 dark:text-white text-base font-semibold truncate flex items-center gap-1.5',\n  description: 'text-[15px] text-gray-500 dark:text-gray-400 mt-1'\n}\n\n\ndefineOptions({\n  inheritAttrs: false\n})\n\nconst props = defineProps({\n  ...nuxtLinkProps,\n  title: {\n    type: String,\n    default: undefined\n  },\n  description: {\n    type: String,\n    default: undefined\n  },\n  icon: {\n    type: String,\n    default: undefined\n  },\n  class: {\n    type: [String, Object, Array] as PropType<any>,\n    default: undefined\n  },\n  ui: {\n    type: Object as PropType<Partial<typeof config & typeof cardConfig>>,\n    default: () => ({})\n  }\n})\n\nconst slots = useSlots()\nconst { ui, attrs } = useUI('page.card', toRef(props, 'ui'), config, toRef(props, 'class'), true)\n\nconst nuxtLinkBind = computed(() => getNuxtLinkProps(props))\nconst ariaLabel = computed(() => (props.title || (slots.title && getSlotChildrenText(slots.title())) || 'Card link').trim())\n</script>\n"],"names":[],"mappings":";;;;;;AACO,MAAM,sBAAsB,CAAA,aAAY,SAAS,IAAI,CAAQ,SAAA;AAC9D,MAAA,CAAC,KAAK,YAAY,OAAO,KAAK,aAAa,SAAiB,QAAA,KAAK,YAAY;AAAA,WACxE,MAAM,QAAQ,KAAK,QAAQ,EAAU,QAAA,oBAAoB,KAAK,QAAQ;AAAA,WACtE,KAAK,SAAS,QAAS,QAAO,oBAAoB,KAAK,SAAS,SAAS;AACpF,CAAC,EAAE,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqCV,UAAM,SAAS;AAAA,MACb,SAAS;AAAA,MACT,IAAI;AAAA,MACJ,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,MAAM;AAAA,MACR;AAAA,MACA,MAAM;AAAA,QACJ,MAAM;AAAA,MACR;AAAA,MACA,OAAO;AAAA,MACP,aAAa;AAAA,IAAA;AAQf,UAAM,QAAQ;AAwBd,UAAM,QAAQ;AACd,UAAM,EAAE,IAAI,MAAM,IAAI,MAAM,aAAa,MAAM,OAAO,IAAI,GAAG,QAAQ,MAAM,OAAO,OAAO,GAAG,IAAI;AAEhG,UAAM,eAAe,SAAS,MAAM,iBAAiB,KAAK,CAAC;AAC3D,UAAM,YAAY,SAAS,OAAO,MAAM,SAAU,MAAM,SAAS,oBAAoB,MAAM,MAAO,CAAA,KAAM,aAAa,KAAM,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0,1]}