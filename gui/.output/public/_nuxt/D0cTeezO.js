import{ar as a}from"./CQMx3IcQ.js";import{P as s,D as c}from"./Bg4kDvc2.js";const n=a("projects",{state:()=>({projects:[],project:null}),getters:{wordpress(){return this.projects.find(t=>t.type.label==="Wordpress")},laravel(){return this.projects.find(t=>t.type.label==="Laravel")},nodejs(){return this.projects.find(t=>t.type.label==="Node.js")},unknown(){return this.projects.find(t=>t.type.label==="Unknown")}},actions:{findByName(t){return this.projects.find(e=>e.getName()===t)},async loadProjects(){{const t=localStorage.getItem("projects");if(t){const e=JSON.parse(t);this.projects=e.map(o=>{const r=new s(o);return r.database&&(r.database=new c(r.database)),r})}else try{this.projects=await s.all(),localStorage.setItem("projects",JSON.stringify(this.projects))}catch(e){console.error("Failed to load projects:",e)}}},async fetchProject(t){this.loading=!0;try{this.projects.length||await this.loadProjects(),this.project=this.projects.find(e=>e.getName()===t)}catch(e){console.error("Failed to load project details:",e)}finally{this.loading=!1}},async reloadProjects(){try{this.projects=await s.all(),localStorage.setItem("projects",JSON.stringify(this.projects))}catch(t){console.error("Failed to reload projects:",t)}},async performProjectAction(t,e){try{await t[e](),await this.loadProjects()}catch(o){console.error(`Failed to ${e} project:`,o)}}}});export{n as u};
