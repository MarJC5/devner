{"version":3,"file":"_name_-nM3bTeGR.js","sources":["../../../../pages/databases/[type]/[name].vue"],"sourcesContent":["<template>\n    <UPageHeader\n      :headline=\"database ? '' : 'Loading...'\"\n      class=\"mb-4 sticky top-0 bg-white z-10 dark:bg-gray-900 pb-4\"\n    >\n      <template #title>\n          <h1 v-if=\"database\" class=\"flex\">{{ database.getName() }}\n          <UBadge \n            :label=\"database.getType().label\"\n            :color=\"database.getType().color\"\n            class=\"ml-2 h-6\"\n            variant=\"soft\"/>\n          </h1>\n      </template>\n      <template #description>\n        <div class=\"flex flex-wrap gap-4\" v-if=\"database\">\n          \n        </div>\n      </template>\n    </UPageHeader>\n    <div v-if=\"database\">\n    </div>\n    <div v-else>\n      <UButton \n        size=\"xl\"\n        color=\"white\"\n        square\n        block\n        variant=\"ghost\"\n        loading>\n          Loading database...\n      </UButton>\n    </div>\n  </template>\n  \n  <script setup>\n  import Database from \"@/models/Database\";\n  \n  const route = useRoute();\n  const database = ref(null);\n  \n  const loadDatabase = async () => {\n    try {\n        database.value = await Database.fetchDatabase(route.params.type, route.params.name);\n    } catch (error) {\n      console.error(\"Failed to load database details:\", error);\n    }\n  };\n  \n  const performDatabaseAction = async (database, action) => {\n    try {\n      await database[action]();\n      loadDatabase();\n    } catch (error) {\n      console.error(`Failed to ${action} database:`, error);\n    }\n  };\n  \n  onMounted(loadDatabase);\n  \n  // Watch and update the containers ref\n  watch(database, (newDatabase) => {\n    database.value = newDatabase;\n  });\n  </script>\n  "],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCgB,aAAW;AACzB,UAAM,WAAW,IAAI,IAAI;AAsBzB,UAAM,UAAU,CAAC,gBAAgB;AAC/B,eAAS,QAAQ;AAAA,IACrB,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}