{"version":3,"file":"Badge-OGRmTTcV.js","sources":["../../../../node_modules/@nuxt/ui/dist/runtime/ui.config/elements/badge.mjs","../../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Badge.vue"],"sourcesContent":["export default {\n  base: \"inline-flex items-center\",\n  rounded: \"rounded-md\",\n  font: \"font-medium\",\n  size: {\n    xs: \"text-xs px-1.5 py-0.5\",\n    sm: \"text-xs px-2 py-1\",\n    md: \"text-sm px-2 py-1\",\n    lg: \"text-sm px-2.5 py-1.5\"\n  },\n  color: {\n    white: {\n      solid: \"ring-1 ring-inset ring-gray-300 dark:ring-gray-700 text-gray-900 dark:text-white bg-white dark:bg-gray-900\"\n    },\n    gray: {\n      solid: \"ring-1 ring-inset ring-gray-300 dark:ring-gray-700 text-gray-700 dark:text-gray-200 bg-gray-50 dark:bg-gray-800\"\n    },\n    black: {\n      solid: \"text-white dark:text-gray-900 bg-gray-900 dark:bg-white\"\n    }\n  },\n  variant: {\n    solid: \"bg-{color}-500 dark:bg-{color}-400 text-white dark:text-gray-900\",\n    outline: \"text-{color}-500 dark:text-{color}-400 ring-1 ring-inset ring-{color}-500 dark:ring-{color}-400\",\n    soft: \"bg-{color}-50 dark:bg-{color}-400 dark:bg-opacity-10 text-{color}-500 dark:text-{color}-400\",\n    subtle: \"bg-{color}-50 dark:bg-{color}-400 dark:bg-opacity-10 text-{color}-500 dark:text-{color}-400 ring-1 ring-inset ring-{color}-500 dark:ring-{color}-400 ring-opacity-25 dark:ring-opacity-25\"\n  },\n  default: {\n    size: \"sm\",\n    variant: \"solid\",\n    color: \"primary\"\n  }\n};\n","<template>\n  <span :class=\"badgeClass\" v-bind=\"attrs\">\n    <slot>{{ label }}</slot>\n  </span>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twMerge, twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport { useInjectButtonGroup } from \"../../composables/useButtonGroup\";\nimport appConfig from \"#build/app.config\";\nimport { badge } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.badge, badge);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    variant: {\n      type: String,\n      default: () => config.default.variant,\n      validator(value) {\n        return [\n          ...Object.keys(config.variant),\n          ...Object.values(config.color).flatMap((value2) => Object.keys(value2))\n        ].includes(value);\n      }\n    },\n    label: {\n      type: [String, Number],\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"badge\", toRef(props, \"ui\"), config);\n    const { size, rounded } = useInjectButtonGroup({ ui, props });\n    const badgeClass = computed(() => {\n      const variant = ui.value.color?.[props.color]?.[props.variant] || ui.value.variant[props.variant];\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.font,\n        rounded.value,\n        ui.value.size[size.value],\n        variant?.replaceAll(\"{color}\", props.color)\n      ), props.class);\n    });\n    return {\n      attrs,\n      badgeClass\n    };\n  }\n});\n</script>\n"],"names":["_ssrRenderAttrs","_mergeProps","_ssrRenderSlot","_ssrInterpolate"],"mappings":"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","x_google_ignoreList":[0,1]}